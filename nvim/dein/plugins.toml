# General
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'cespare/vim-toml'

# Tools
[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'

# Edit
[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'alvan/vim-closetag'
hook_add='''
  let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.xml,*.vue'
  let g:closetag_filetypes = 'html,xhtml,phtml,xml,vue'
'''

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'mechatroner/rainbow_csv'

# Appearance
[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = { 'colorscheme': 'wombat' }
'''

# Lang
[[plugins]]
repo = 'fatih/vim-go'
hook_add='''
  let g:go_fmt_command = "goimports"
  let g:go_metalinter_autosave = 1
  let g:go_def_mapping_enable = 0
  let g:go_doc_keywordprg_enable = 0
'''

[[plugins]]
repo = 'udalov/kotlin-vim'

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'slim-template/vim-slim'

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'autowitch/hive.vim'

[[plugins]]
repo= 'posva/vim-vue'
hook_add='''
  let g:vue_disable_pre_processors=1
'''

[[plugins]]
repo = 'shmup/vim-sql-syntax'

[[plugins]]
repo = 'tpope/vim-markdown'

[[plugins]]
repo = 'previm/previm'
hook_add = '''
  let g:previm_open_cmd = 'open -a Google\ Chrome'
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
if executable('clangd')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'clangd',
        \ 'cmd': {server_info->['clangd']},
        \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
        \ })
endif

if executable('solargraph')
    " gem install solargraph
    au User lsp_setup call lsp#register_server({
        \ 'name': 'solargraph',
        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
        \ 'initialization_options': {"diagnostics": "true"},
        \ 'whitelist': ['ruby'],
        \ })
endif

if executable('gopls')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'gopls',
        \ 'cmd': {server_info->['gopls', '-mode', 'stdio']},
        \ 'whitelist': ['go'],
        \ })
endif

if executable('pyls')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'pyls',
        \ 'cmd': {server_info->['pyls']},
        \ 'whitelist': ['python'],
        \ })
endif

if executable('typescript-language-server')
    au User lsp_setup call lsp#register_server({
      \ 'name': 'javascript support using typescript-language-server',
      \ 'cmd': { server_info->[&shell, &shellcmdflag, 'typescript-language-server --stdio']},
      \ 'root_uri': { server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_directory(lsp#utils#get_buffer_path(), '.git/..'))},
      \ 'whitelist': ['javascript', 'javascript.jsx']
      \ })
endif

let g:lsp_signs_enabled = 1
let g:lsp_diagnostics_enabled = 0
let g:lsp_signs_error = {'text': '✗'}
let g:lsp_signs_warning = {'text': '‼'}
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
